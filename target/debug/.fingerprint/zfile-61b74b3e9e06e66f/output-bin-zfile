{"$message_type":"diagnostic","message":"unreachable statement","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":3985,"byte_end":4005,"line_start":106,"line_end":106,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"    disable_raw_mode()?;","highlight_start":5,"highlight_end":25}],"label":"unreachable statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1189,"byte_end":3928,"line_start":38,"line_end":104,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    loop {","highlight_start":5,"highlight_end":11},{"text":"        let entries = get_entries(&mut current_directory);","highlight_start":1,"highlight_end":59},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        terminal.draw(|f| {","highlight_start":1,"highlight_end":28},{"text":"            // draw the ui components","highlight_start":1,"highlight_end":38},{"text":"            // declaring each item","highlight_start":1,"highlight_end":35},{"text":"            let items: Vec<ListItem> = entries","highlight_start":1,"highlight_end":47},{"text":"                .iter()","highlight_start":1,"highlight_end":24},{"text":"                .map(|entry| {","highlight_start":1,"highlight_end":31},{"text":"                    let name = entry.file_name().unwrap_or_default().to_string_lossy();","highlight_start":1,"highlight_end":88},{"text":"                    let display_name = if entry.is_dir() {","highlight_start":1,"highlight_end":59},{"text":"                        format!(\"{}/\", name)","highlight_start":1,"highlight_end":45},{"text":"                    } else {","highlight_start":1,"highlight_end":29},{"text":"                        name.to_string()","highlight_start":1,"highlight_end":41},{"text":"                    };","highlight_start":1,"highlight_end":23},{"text":"                    ListItem::new(display_name)","highlight_start":1,"highlight_end":48},{"text":"                })","highlight_start":1,"highlight_end":19},{"text":"                .collect();","highlight_start":1,"highlight_end":28},{"text":"            let ui_list = List::new(items)","highlight_start":1,"highlight_end":43},{"text":"                .block(Block::default().title(\"zfile\").borders(Borders::ALL))","highlight_start":1,"highlight_end":78},{"text":"                .highlight_style(","highlight_start":1,"highlight_end":34},{"text":"                    Style::default()","highlight_start":1,"highlight_end":37},{"text":"                        // 2025 is the year for cyan xd","highlight_start":1,"highlight_end":56},{"text":"                        .fg(Color::Cyan),","highlight_start":1,"highlight_end":42},{"text":"                );","highlight_start":1,"highlight_end":19},{"text":"            f.render_stateful_widget(","highlight_start":1,"highlight_end":38},{"text":"                ui_list,","highlight_start":1,"highlight_end":25},{"text":"                f.area(),","highlight_start":1,"highlight_end":26},{"text":"                &mut ratatui::widgets::ListState::default().with_selected(Some(selected_file)),","highlight_start":1,"highlight_end":96},{"text":"            );","highlight_start":1,"highlight_end":15},{"text":"        })?;","highlight_start":1,"highlight_end":13},{"text":"        if event::poll(std::time::Duration::from_millis(100))? {","highlight_start":1,"highlight_end":65},{"text":"            if let Event::Key(key) = event::read()? {","highlight_start":1,"highlight_end":54},{"text":"                match key.code {","highlight_start":1,"highlight_end":33},{"text":"                    KeyCode::Char('q') => exit_helper(),","highlight_start":1,"highlight_end":57},{"text":"                    KeyCode::Char('j') => {","highlight_start":1,"highlight_end":44},{"text":"                        if selected_file < get_entries(&current_directory).len().saturating_sub(1) {","highlight_start":1,"highlight_end":101},{"text":"                            selected_file += 1;","highlight_start":1,"highlight_end":48},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    KeyCode::Char('k') => {","highlight_start":1,"highlight_end":44},{"text":"                        if selected_file > 0 {","highlight_start":1,"highlight_end":47},{"text":"                            selected_file -= 1;","highlight_start":1,"highlight_end":48},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    KeyCode::Char('h') => {","highlight_start":1,"highlight_end":44},{"text":"                        current_directory.pop();","highlight_start":1,"highlight_end":49},{"text":"                        selected_file = 0;","highlight_start":1,"highlight_end":43},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    KeyCode::Char('l') => {","highlight_start":1,"highlight_end":44},{"text":"                        if let Some(pointer_to_file) = entries.get(selected_file) {","highlight_start":1,"highlight_end":84},{"text":"                            if pointer_to_file.is_dir() {","highlight_start":1,"highlight_end":58},{"text":"                                current_directory = pointer_to_file.clone();","highlight_start":1,"highlight_end":77},{"text":"                                selected_file = 0;","highlight_start":1,"highlight_end":51},{"text":"                            } else if pointer_to_file.is_file() {","highlight_start":1,"highlight_end":66},{"text":"                                if let Ok(new_dir) = file_helper(&pointer_to_file) {","highlight_start":1,"highlight_end":85},{"text":"                                    current_directory = new_dir;","highlight_start":1,"highlight_end":65},{"text":"                                    selected_file = 0;","highlight_start":1,"highlight_end":55},{"text":"                                }","highlight_start":1,"highlight_end":34},{"text":"                            }","highlight_start":1,"highlight_end":30},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    _ => {}","highlight_start":1,"highlight_end":28},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:106:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    loop {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let entries = get_entries(&mut current_directory);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        terminal.draw(|f| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12many code following this expression is unreachable\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    //cleaning up so the terminal can be used again\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    disable_raw_mode()?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable statement\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}
